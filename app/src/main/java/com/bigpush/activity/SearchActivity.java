package com.bigpush.activity;import android.content.Intent;import android.graphics.Color;import android.os.Bundle;import android.support.annotation.Nullable;import android.text.Editable;import android.text.TextWatcher;import android.view.View;import android.widget.*;import com.alibaba.fastjson.JSON;import com.bigpush.R;import com.bigpush.adapter.RecentKeyAdapter;import com.bigpush.resp.HotKeyResp;import com.bigpush.util.*;import com.bigpush.view.DragFlowLayout;import com.yanzhenjie.nohttp.RequestMethod;import com.yanzhenjie.nohttp.rest.JsonObjectRequest;import com.yanzhenjie.nohttp.rest.Response;import java.util.*;public class SearchActivity extends BaseActivity {    private int getHotKeyWhat = Constant.NET_WHAT++;    private List<HotKeyResp.DataBean> data = new ArrayList<>();    private ListView lv_history;    private List<String> cacheKey = new ArrayList<>();    private RecentKeyAdapter recentKeyAdapter;    private EditText et_search;    private TextView tv_search;    private DragFlowLayout mDragFlowLayout;    private int[] colors = {android.R.color.holo_red_light, android.R.color.holo_blue_light,            android.R.color.holo_orange_light, android.R.color.holo_green_light,            android.R.color.holo_purple};    private String key;    private String type;    private LinearLayout ll_hot;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_search);        type=getIntent().getStringExtra("type");        getHotKey();        initView();    }    private void initView() {        ll_hot = (LinearLayout) findViewById(R.id.ll_hot);        if("shop".equals(type)){            ll_hot.setVisibility(View.VISIBLE);        }        tv_search = (TextView) findViewById(R.id.tv_search);        tv_search.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if("取消".equals(tv_search.getText().toString().trim())){                    finish();                }else{                    SystemUtils.cachKeys.add(et_search.getText().toString());                    cacheKey.add(et_search.getText().toString());                    recentKeyAdapter.notifyDataSetChanged();                    SystemUtils.saveKeys(SearchActivity.this,SystemUtils.cachKeys);                    Intent intent;                    if("shop".equals(type)){                        intent=new Intent(SearchActivity.this,ShopResultActivity.class);                    }else{                        intent=new Intent(SearchActivity.this,InfoResultActivity.class);                    }                    intent.putExtra("key",key);                    startActivity(intent);                    et_search.setSelection(et_search.getText().length());                }            }        });        et_search = (EditText) findViewById(R.id.et_search);        et_search.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {            }            @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                if(charSequence.length()>0){                    tv_search.setText("搜索");                    key=charSequence.toString();                }else{                    tv_search.setText("取消");                }            }            @Override            public void afterTextChanged(Editable editable) {            }        });        lv_history = (ListView) findViewById(R.id.lv_history);        lv_history.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {                Intent intent;                if("shop".equals(type)){                    intent=new Intent(SearchActivity.this,ShopResultActivity.class);                }else{                    intent=new Intent(SearchActivity.this,InfoResultActivity.class);                }                intent.putExtra("key",cacheKey.get(i));                et_search.setText(cacheKey.get(i));                startActivity(intent);                et_search.setSelection(et_search.getText().length());            }        });        SystemUtils.cachKeys=SystemUtils.getKeys(this);        cacheKey.addAll(SystemUtils.cachKeys);        recentKeyAdapter = new RecentKeyAdapter(this, cacheKey);        lv_history.setAdapter(recentKeyAdapter);        mDragFlowLayout = (DragFlowLayout) findViewById(R.id.mDragFlowLayout);        mDragFlowLayout.setOnItemClickCallback(new DragFlowLayout.Callback() {            @Override            public void onItemClick(int position) {                Toast.makeText(SearchActivity.this,                        mDragFlowLayout.getItemContent(position),                        Toast.LENGTH_SHORT).show();                et_search.setText(mDragFlowLayout.getItemContent(position));                key=mDragFlowLayout.getItemContent(position);                Intent intent;                if("shop".equals(type)){                    intent=new Intent(SearchActivity.this,ShopResultActivity.class);                }else{                    intent=new Intent(SearchActivity.this,InfoResultActivity.class);                }                intent.putExtra("key",key);                startActivity(intent);                et_search.setSelection(et_search.getText().length());            }        });    }    private void addItem(String message) {//        tv.setPadding(DensityUtils.dpToPx(this, 16), DensityUtils.dpToPx(this, 5), DensityUtils.dpToPx(this, 16), DensityUtils.dpToPx(this, 5));        DragFlowLayout.LayoutParams layoutParams = new DragFlowLayout.LayoutParams(DragFlowLayout.LayoutParams.WRAP_CONTENT,                DragFlowLayout.LayoutParams.WRAP_CONTENT);        int margin = DensityUtils.dpToPx(this, 8);        layoutParams.rightMargin = margin;//        layoutParams.leftMargin = margin;        layoutParams.topMargin = margin;//        layoutParams.bottomMargin = margin;        int padding = 15;        TextView textView = new TextView(this);        textView.setPadding(padding, padding, padding, padding);        textView.setTextColor(Color.WHITE);        textView.setText(message);        Random random = new Random();        textView.setBackgroundColor(getResources().getColor(colors[random.nextInt(colors.length)]));        textView.setLayoutParams(layoutParams);        mDragFlowLayout.addView(textView);    }    private void getHotKey() {        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Constant.overallGetHotText, RequestMethod.POST);        Map<String, Object> param = new HashMap<>();        param.put("userCode", UserUtils.getUserCode(this));        jsonObjectRequest.add(param);        CallServer.getInstance().add(getHotKeyWhat, jsonObjectRequest, this);    }    @Override    public void onSucceed(int what, Response response) {        super.onSucceed(what, response);        if (getHotKeyWhat == what) {            HotKeyResp hotKeyResp = JSON.parseObject(response.get().toString(), HotKeyResp.class);            if (hotKeyResp != null && hotKeyResp.getData() != null) {                data.addAll(hotKeyResp.getData());                for (HotKeyResp.DataBean dataBean:data ) {                    addItem(dataBean.getText());                }            }        }    }}